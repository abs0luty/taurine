chunk ::= block
block ::= {stat} [retstat]
stat  ::= ';'
       |  varlist '=' explist
       |  call
       |  label
       |  break
       |  gotostat
       |  dostat
       |  whilestat
       |  repeatstat
       |  ifstat
       |  forstat
       |  function

label      ::= '::' IDENTIFIER '::'
gotostat   ::= goto IDENTIFIER
dostat     ::= do block end
whilestat  ::= while exp do block end
repeatstat ::= repeat block until exp
ifstat     ::= if exp then block {elseif exp then block} [else block] end
forstat    ::= for IDENTIFIER '=' exp ',' exp [',' exp] do block end
            |  for namelist in explist do block end

functiondecl ::= function functionname functionbody
functionbody ::= '(' [parlist] ')' block end
parlist      ::= namelist [',' '...'] | '...'
namelist     ::= IDENTIFIER {',' IDENTIFIER}
functiondef  ::= function functionbody

exp ::= nil
     |  false
     |  true
     |  NUMERAL
     |  STRING_LITERAL
     |  '...'
     |  functiondef
     |  prefixexp
     |  tableconstructor
     |  exp binop exp
     |  unop exp

binop ::= '+' | '-' | '*' | '/' | '//' | '^' | '%' |
           '&' | '~' | '|' | '>>' | '<<' | '..' |
           '<' | '<=' | '>' | '>=' | '==' | '~=' |
           and | or
unop  ::= '-' | not | '#' | '~'

tableconstructor ::= '{' [fieldlist] '}'
fieldlist ::= field {fieldsep field} [fieldsep]
fieldsep  ::= ',' | ';'
field     ::= '[' exp ']' '=' exp
           | IDENTIFIER '=' exp
           | exp